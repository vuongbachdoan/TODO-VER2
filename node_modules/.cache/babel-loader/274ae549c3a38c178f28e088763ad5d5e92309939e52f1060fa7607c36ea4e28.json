{"ast":null,"code":"export const changDragPosition = function (items, yPos, newYPos, currentOrder, heightOfElement) {\n  let spaceBetweenRow = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  let variance = newYPos - yPos;\n  let axist = 1; // -1 is to top, 1 is to bottom\n  if (variance < 0) {\n    axist = -1;\n  }\n  // console.log(`${axist}: axist`) // ok\n  variance = Math.abs(variance);\n  if (axist + currentOrder < 0 || axist + currentOrder > items.length) return items; // index out of range\n\n  let newOrder = currentOrder;\n  while (variance > heightOfElement && !(newOrder + axist < 0) && !(newOrder + axist > items.length)) {\n    newOrder += axist;\n    variance -= heightOfElement + spaceBetweenRow;\n  }\n  let tempItem = items.find((item, index) => index === currentOrder);\n  console.log(`${tempItem} : temp item`);\n  items = items.filter((item, index) => item.order !== currentOrder);\n  items.splice(newOrder, 0, tempItem);\n  items = items.forEach((item, index) => item.order !== index);\n  return items;\n};","map":{"version":3,"names":["changDragPosition","items","yPos","newYPos","currentOrder","heightOfElement","spaceBetweenRow","variance","axist","Math","abs","length","newOrder","tempItem","find","item","index","console","log","filter","order","splice","forEach"],"sources":["C:/DEV/React/todo-ver2/todo-client/src/shared/utils/changeDragPosition.js"],"sourcesContent":["export const changDragPosition = (items, yPos, newYPos, currentOrder, heightOfElement, spaceBetweenRow = 0) => {\r\n    let variance = newYPos - yPos;\r\n    let axist = 1; // -1 is to top, 1 is to bottom\r\n    if(variance < 0) {\r\n        axist = -1;\r\n    }\r\n    // console.log(`${axist}: axist`) // ok\r\n    variance = Math.abs(variance);\r\n\r\n    if(axist + currentOrder < 0 || axist + currentOrder > items.length) return items; // index out of range\r\n\r\n    let newOrder = currentOrder;\r\n    while(variance > heightOfElement && !(newOrder + axist < 0) && !(newOrder + axist > items.length)) {\r\n        newOrder += axist;\r\n        variance -= (heightOfElement + spaceBetweenRow);\r\n    }\r\n    \r\n    let tempItem = items.find((item, index) => index === currentOrder);\r\n    console.log(`${tempItem} : temp item`)\r\n    items = items.filter((item, index) => item.order !== currentOrder);\r\n    items.splice(newOrder, 0, tempItem);\r\n    items = items.forEach((item, index) => item.order !== index);\r\n    return items;\r\n}"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,UAACC,KAAK,EAAEC,IAAI,EAAEC,OAAO,EAAEC,YAAY,EAAEC,eAAe,EAA0B;EAAA,IAAxBC,eAAe,uEAAG,CAAC;EACtG,IAAIC,QAAQ,GAAGJ,OAAO,GAAGD,IAAI;EAC7B,IAAIM,KAAK,GAAG,CAAC,CAAC,CAAC;EACf,IAAGD,QAAQ,GAAG,CAAC,EAAE;IACbC,KAAK,GAAG,CAAC,CAAC;EACd;EACA;EACAD,QAAQ,GAAGE,IAAI,CAACC,GAAG,CAACH,QAAQ,CAAC;EAE7B,IAAGC,KAAK,GAAGJ,YAAY,GAAG,CAAC,IAAII,KAAK,GAAGJ,YAAY,GAAGH,KAAK,CAACU,MAAM,EAAE,OAAOV,KAAK,CAAC,CAAC;;EAElF,IAAIW,QAAQ,GAAGR,YAAY;EAC3B,OAAMG,QAAQ,GAAGF,eAAe,IAAI,EAAEO,QAAQ,GAAGJ,KAAK,GAAG,CAAC,CAAC,IAAI,EAAEI,QAAQ,GAAGJ,KAAK,GAAGP,KAAK,CAACU,MAAM,CAAC,EAAE;IAC/FC,QAAQ,IAAIJ,KAAK;IACjBD,QAAQ,IAAKF,eAAe,GAAGC,eAAgB;EACnD;EAEA,IAAIO,QAAQ,GAAGZ,KAAK,CAACa,IAAI,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKA,KAAK,KAAKZ,YAAY,CAAC;EAClEa,OAAO,CAACC,GAAG,CAAE,GAAEL,QAAS,cAAa,CAAC;EACtCZ,KAAK,GAAGA,KAAK,CAACkB,MAAM,CAAC,CAACJ,IAAI,EAAEC,KAAK,KAAKD,IAAI,CAACK,KAAK,KAAKhB,YAAY,CAAC;EAClEH,KAAK,CAACoB,MAAM,CAACT,QAAQ,EAAE,CAAC,EAAEC,QAAQ,CAAC;EACnCZ,KAAK,GAAGA,KAAK,CAACqB,OAAO,CAAC,CAACP,IAAI,EAAEC,KAAK,KAAKD,IAAI,CAACK,KAAK,KAAKJ,KAAK,CAAC;EAC5D,OAAOf,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}