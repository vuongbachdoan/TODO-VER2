{"ast":null,"code":"export const changDragPosition = function (items, yPos, newYPos, currentOrder, heightOfElement) {\n  let spaceBetweenRow = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  let variance = newYPos - yPos;\n  let axist = 1; // -1 is to top, 1 is to bottom\n  let newOrder = currentOrder;\n  if (variance < 0) {\n    axist = -1;\n  }\n  // console.log(`${axist}: axist`) // ok\n  variance = Math.abs(variance);\n  console.log(`${newOrder}: new order`);\n  if (axist + currentOrder < 0 || axist + currentOrder > items.length) return items; // index out of range\n\n  while (variance > heightOfElement && !(newOrder + axist < 0) && !(newOrder + axist > items.length)) {\n    newOrder += axist;\n    variance -= heightOfElement + spaceBetweenRow;\n  }\n  console.log(`${newOrder}: new order`);\n  let tempItem = items.find((item, index) => index === currentOrder);\n  console.log(`${tempItem} : temp item`);\n  items = items.filter((item, index) => item.order !== currentOrder);\n  items.splice(newOrder, 0, tempItem);\n  items = items.forEach((item, index) => item.order !== index);\n  return items;\n};","map":{"version":3,"names":["changDragPosition","items","yPos","newYPos","currentOrder","heightOfElement","spaceBetweenRow","variance","axist","newOrder","Math","abs","console","log","length","tempItem","find","item","index","filter","order","splice","forEach"],"sources":["C:/DEV/React/todo-ver2/todo-client/src/shared/utils/changeDragPosition.js"],"sourcesContent":["export const changDragPosition = (items, yPos, newYPos, currentOrder, heightOfElement, spaceBetweenRow = 0) => {\r\n    let variance = newYPos - yPos;\r\n    let axist = 1; // -1 is to top, 1 is to bottom\r\n    let newOrder = currentOrder;\r\n    if(variance < 0) {\r\n        axist = -1;\r\n    }\r\n    // console.log(`${axist}: axist`) // ok\r\n    variance = Math.abs(variance);\r\n\r\n    console.log(`${newOrder}: new order`)\r\n    if(axist + currentOrder < 0 || axist + currentOrder > items.length) return items; // index out of range\r\n\r\n    while(variance > heightOfElement && !(newOrder + axist < 0) && !(newOrder + axist > items.length)) {\r\n        newOrder += axist;\r\n        variance -= (heightOfElement + spaceBetweenRow);\r\n    }\r\n    console.log(`${newOrder}: new order`)\r\n    \r\n    let tempItem = items.find((item, index) => index === currentOrder);\r\n    console.log(`${tempItem} : temp item`)\r\n    items = items.filter((item, index) => item.order !== currentOrder);\r\n    items.splice(newOrder, 0, tempItem);\r\n    items = items.forEach((item, index) => item.order !== index);\r\n    return items;\r\n}"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,UAACC,KAAK,EAAEC,IAAI,EAAEC,OAAO,EAAEC,YAAY,EAAEC,eAAe,EAA0B;EAAA,IAAxBC,eAAe,uEAAG,CAAC;EACtG,IAAIC,QAAQ,GAAGJ,OAAO,GAAGD,IAAI;EAC7B,IAAIM,KAAK,GAAG,CAAC,CAAC,CAAC;EACf,IAAIC,QAAQ,GAAGL,YAAY;EAC3B,IAAGG,QAAQ,GAAG,CAAC,EAAE;IACbC,KAAK,GAAG,CAAC,CAAC;EACd;EACA;EACAD,QAAQ,GAAGG,IAAI,CAACC,GAAG,CAACJ,QAAQ,CAAC;EAE7BK,OAAO,CAACC,GAAG,CAAE,GAAEJ,QAAS,aAAY,CAAC;EACrC,IAAGD,KAAK,GAAGJ,YAAY,GAAG,CAAC,IAAII,KAAK,GAAGJ,YAAY,GAAGH,KAAK,CAACa,MAAM,EAAE,OAAOb,KAAK,CAAC,CAAC;;EAElF,OAAMM,QAAQ,GAAGF,eAAe,IAAI,EAAEI,QAAQ,GAAGD,KAAK,GAAG,CAAC,CAAC,IAAI,EAAEC,QAAQ,GAAGD,KAAK,GAAGP,KAAK,CAACa,MAAM,CAAC,EAAE;IAC/FL,QAAQ,IAAID,KAAK;IACjBD,QAAQ,IAAKF,eAAe,GAAGC,eAAgB;EACnD;EACAM,OAAO,CAACC,GAAG,CAAE,GAAEJ,QAAS,aAAY,CAAC;EAErC,IAAIM,QAAQ,GAAGd,KAAK,CAACe,IAAI,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKA,KAAK,KAAKd,YAAY,CAAC;EAClEQ,OAAO,CAACC,GAAG,CAAE,GAAEE,QAAS,cAAa,CAAC;EACtCd,KAAK,GAAGA,KAAK,CAACkB,MAAM,CAAC,CAACF,IAAI,EAAEC,KAAK,KAAKD,IAAI,CAACG,KAAK,KAAKhB,YAAY,CAAC;EAClEH,KAAK,CAACoB,MAAM,CAACZ,QAAQ,EAAE,CAAC,EAAEM,QAAQ,CAAC;EACnCd,KAAK,GAAGA,KAAK,CAACqB,OAAO,CAAC,CAACL,IAAI,EAAEC,KAAK,KAAKD,IAAI,CAACG,KAAK,KAAKF,KAAK,CAAC;EAC5D,OAAOjB,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}