{"ast":null,"code":"var _jsxFileName = \"C:\\\\DEV\\\\React\\\\todo-ver2\\\\todo-client\\\\src\\\\pages\\\\SignUp\\\\SignUp.jsx\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { CtButton } from \"../../shared/components/Button/Button\";\nimport { CtInput, CtPassword } from \"../../shared/components/Input/Input\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { validateEmail } from \"../../shared/utils/validateEmail\";\nimport { AuthService } from \"../../shared/services/authService\";\nimport { useDispatch } from \"react-redux\";\nimport { setToken } from \"../../redux/reducers/appReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignUp = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [email, getEmailValue] = useState('');\n  const handleEmailValue = val => {\n    getEmailValue(val);\n  };\n  const [isEmailValid, setIsEmailValid] = useState(true);\n  useEffect(() => {\n    setIsEmailValid(validateEmail(email));\n  }, [email]);\n  const [password, getPasswordValue] = useState('');\n  const handlePasswordValue = val => {\n    getPasswordValue(val);\n  };\n  const [isPasswordValid, setIsPasswordValid] = useState(true);\n  const [passwordConfirmed, getConfirmPasswordValue] = useState('');\n  const handleConfirmPasswordValue = val => {\n    getConfirmPasswordValue(val);\n  };\n  useEffect(() => {\n    if (password.length >= 8 && passwordConfirmed.length >= 8 && passwordConfirmed === password) {\n      setIsPasswordValid(true);\n    } else {\n      setIsPasswordValid(false);\n    }\n  }, [password, passwordConfirmed]);\n  const createUser = () => {\n    if (isPasswordValid) {\n      const user = {\n        email: email,\n        password: password\n      };\n      AuthService.signUp(user).then(res => {\n        console.log(res.data);\n        dispatch(setToken(res.data));\n        navigate('/app');\n      }).catch(err => console.log(err));\n    } else {\n      console.warn(\"Can't create user!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ct__desctiption\",\n          children: \"Work better with todoist.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CtInput, {\n          data: {\n            label: \"Email\",\n            required: true,\n            getInput: val => handleEmailValue(val),\n            description: isEmailValid ? \"\" : \"Email is invalid\",\n            placeholder: \"abc@domain.com\",\n            noSpace: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CtPassword, {\n          data: {\n            label: \"Password\",\n            required: true,\n            getInput: val => handlePasswordValue(val),\n            noSpace: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CtPassword, {\n          data: {\n            label: \"Confirm password\",\n            required: true,\n            getInput: val => handleConfirmPasswordValue(val),\n            description: isPasswordValid && passwordConfirmed.length === 0 ? \"\" : \"Password not match\",\n            noSpace: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CtButton, {\n          data: {\n            description: \"Sign Up\",\n            btnType: \"ct__btn-success\",\n            class: \"ct__my-1\"\n          },\n          onClick: createUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ct__desctiption\",\n          children: [\"Have an account, \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 42\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUp, \"dKPFAnvJ97VQ4U66KEkkWUAc9XQ=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["Link","useNavigate","CtButton","CtInput","CtPassword","useState","useEffect","validateEmail","AuthService","useDispatch","setToken","SignUp","dispatch","navigate","email","getEmailValue","handleEmailValue","val","isEmailValid","setIsEmailValid","password","getPasswordValue","handlePasswordValue","isPasswordValid","setIsPasswordValid","passwordConfirmed","getConfirmPasswordValue","handleConfirmPasswordValue","length","createUser","user","signUp","then","res","console","log","data","catch","err","warn","label","required","getInput","description","placeholder","noSpace","btnType","class"],"sources":["C:/DEV/React/todo-ver2/todo-client/src/pages/SignUp/SignUp.jsx"],"sourcesContent":["import { Link, useNavigate } from \"react-router-dom\";\r\nimport { CtButton } from \"../../shared/components/Button/Button\";\r\nimport { CtInput, CtPassword } from \"../../shared/components/Input/Input\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { validateEmail } from \"../../shared/utils/validateEmail\";\r\nimport { AuthService } from \"../../shared/services/authService\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setToken } from \"../../redux/reducers/appReducer\";\r\n\r\nexport const SignUp = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const [email, getEmailValue] = useState('');\r\n    const handleEmailValue = (val) => {\r\n        getEmailValue(val);\r\n    }\r\n\r\n    const [isEmailValid, setIsEmailValid] = useState(true);\r\n    useEffect(() => {\r\n        setIsEmailValid(validateEmail(email));\r\n    }, [email])\r\n\r\n    const [password, getPasswordValue] = useState('');\r\n    const handlePasswordValue = (val) => {\r\n        getPasswordValue(val);\r\n    }\r\n\r\n    const [isPasswordValid, setIsPasswordValid] = useState(true);\r\n    const [passwordConfirmed, getConfirmPasswordValue] = useState('');\r\n    const handleConfirmPasswordValue = (val) => {\r\n        getConfirmPasswordValue(val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(password.length >= 8 && passwordConfirmed.length >=8 && passwordConfirmed === password) {\r\n            setIsPasswordValid(true);\r\n        } else {\r\n            setIsPasswordValid(false);\r\n        }\r\n    }, [password, passwordConfirmed])\r\n\r\n    const createUser = () => {\r\n        if(isPasswordValid) {\r\n            const user = {\r\n                email: email,\r\n                password: password,\r\n            }\r\n            AuthService.signUp(user)\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    dispatch(setToken(res.data));\r\n                    navigate('/app');\r\n                })\r\n                .catch((err) => console.log(err));\r\n        } else {\r\n            console.warn(\"Can't create user!\")\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__row\">\r\n                <div className=\"login__left\">\r\n                    <h3>Create your account</h3>\r\n                    <p className=\"ct__desctiption\">Work better with todoist.</p>\r\n                    <CtInput data={{ label: \"Email\", required: true, getInput: (val) => handleEmailValue(val), description: isEmailValid ? \"\" : \"Email is invalid\", placeholder: \"abc@domain.com\", noSpace: true }} />\r\n                    <CtPassword data={{ label: \"Password\", required: true, getInput: (val) => handlePasswordValue(val), noSpace: true }} />\r\n                    <CtPassword data={{ label: \"Confirm password\", required: true, getInput: (val) => handleConfirmPasswordValue(val), description: isPasswordValid && passwordConfirmed.length === 0 ? \"\" : \"Password not match\", noSpace: true }} />\r\n                    <CtButton data={{ description: \"Sign Up\", btnType: \"ct__btn-success\", class: \"ct__my-1\" }} onClick={createUser} />\r\n\r\n                    <p className=\"ct__desctiption\">\r\n                        Have an account, <Link to={\"/\"}>login</Link>.\r\n                    </p>\r\n                </div>\r\n                <div className=\"login__right\">\r\n                    <div className=\"bg-content\">\r\n                        {/* <h3 className=\"ct__text-white\">Interactive Login</h3>\r\n                        <div className=\"bg-action_btns row\">\r\n                            <ArrowIcon className=\"bg-action_btn\" style={{transform: \"rotateZ(90deg)\"}}/>\r\n                            <ArrowIcon className=\"bg-action_btn\" style={{transform: \"rotateZ(-90deg)\"}}/>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}