{"ast":null,"code":"export const changDragPosition = function (items, yPos, newYPos, currentOrder, heightOfElement) {\n  let spaceBetweenRow = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  let variance = newYPos - yPos;\n  let axist = 1; // -1 is to top, 1 is to bottom\n  let newOrder = currentOrder;\n  if (variance < 0) {\n    axist = -1;\n  }\n  // console.log(`${axist}: axist`) // ok\n  variance = Math.abs(variance);\n  if (axist + currentOrder < 0 || axist + currentOrder > items.length) return items; // index out of range\n\n  while (variance > heightOfElement && !(newOrder + axist < 0) && !(newOrder + axist > items.length)) {\n    newOrder += axist;\n    variance -= heightOfElement + spaceBetweenRow;\n  }\n  let tempItem = items.find((item, index) => index === currentOrder);\n  let changeItem = items.find((item, index) => index === newOrder);\n  console.log(tempItem.title)(items[currentOrder]).title = changeItem[newOrder].title;\n  items[currentOrder].description = changeItem[newOrder].description;\n  items[newOrder].title = tempItem[currentOrder].title;\n  items[newOrder].description = tempItem[currentOrder].description;\n  return items;\n};","map":{"version":3,"names":["changDragPosition","items","yPos","newYPos","currentOrder","heightOfElement","spaceBetweenRow","variance","axist","newOrder","Math","abs","length","tempItem","find","item","index","changeItem","console","log","title","description"],"sources":["C:/DEV/React/todo-ver2/todo-client/src/shared/utils/changeDragPosition.js"],"sourcesContent":["export const  changDragPosition = (items, yPos, newYPos, currentOrder, heightOfElement, spaceBetweenRow = 0) => {\r\n    let variance = newYPos - yPos;\r\n    let axist = 1; // -1 is to top, 1 is to bottom\r\n    let newOrder = currentOrder;\r\n    if(variance < 0) {\r\n        axist = -1;\r\n    }\r\n    // console.log(`${axist}: axist`) // ok\r\n    variance = Math.abs(variance);\r\n\r\n    if(axist + currentOrder < 0 || axist + currentOrder > items.length) return items; // index out of range\r\n\r\n    while(variance > heightOfElement && !(newOrder + axist < 0) && !(newOrder + axist > items.length)) {\r\n        newOrder += axist;\r\n        variance -= (heightOfElement + spaceBetweenRow);\r\n    }\r\n    \r\n    let tempItem = items.find((item, index) => index === currentOrder);\r\n    let changeItem = items.find((item, index) => index === newOrder);\r\n\r\n    console.log(tempItem.title)\r\n\r\n    (items[currentOrder]).title = (changeItem[newOrder]).title;\r\n    (items[currentOrder]).description = (changeItem[newOrder]).description;\r\n    (items[newOrder]).title = (tempItem[currentOrder]).title;\r\n    (items[newOrder]).description = (tempItem[currentOrder]).description;\r\n\r\n    return items;\r\n}"],"mappings":"AAAA,OAAO,MAAOA,iBAAiB,GAAG,UAACC,KAAK,EAAEC,IAAI,EAAEC,OAAO,EAAEC,YAAY,EAAEC,eAAe,EAA0B;EAAA,IAAxBC,eAAe,uEAAG,CAAC;EACvG,IAAIC,QAAQ,GAAGJ,OAAO,GAAGD,IAAI;EAC7B,IAAIM,KAAK,GAAG,CAAC,CAAC,CAAC;EACf,IAAIC,QAAQ,GAAGL,YAAY;EAC3B,IAAGG,QAAQ,GAAG,CAAC,EAAE;IACbC,KAAK,GAAG,CAAC,CAAC;EACd;EACA;EACAD,QAAQ,GAAGG,IAAI,CAACC,GAAG,CAACJ,QAAQ,CAAC;EAE7B,IAAGC,KAAK,GAAGJ,YAAY,GAAG,CAAC,IAAII,KAAK,GAAGJ,YAAY,GAAGH,KAAK,CAACW,MAAM,EAAE,OAAOX,KAAK,CAAC,CAAC;;EAElF,OAAMM,QAAQ,GAAGF,eAAe,IAAI,EAAEI,QAAQ,GAAGD,KAAK,GAAG,CAAC,CAAC,IAAI,EAAEC,QAAQ,GAAGD,KAAK,GAAGP,KAAK,CAACW,MAAM,CAAC,EAAE;IAC/FH,QAAQ,IAAID,KAAK;IACjBD,QAAQ,IAAKF,eAAe,GAAGC,eAAgB;EACnD;EAEA,IAAIO,QAAQ,GAAGZ,KAAK,CAACa,IAAI,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKA,KAAK,KAAKZ,YAAY,CAAC;EAClE,IAAIa,UAAU,GAAGhB,KAAK,CAACa,IAAI,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKA,KAAK,KAAKP,QAAQ,CAAC;EAEhES,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACO,KAAK,CAAC,CAE1BnB,KAAK,CAACG,YAAY,CAAC,CAAC,CAACgB,KAAK,GAAIH,UAAU,CAACR,QAAQ,CAAC,CAAEW,KAAK;EACzDnB,KAAK,CAACG,YAAY,CAAC,CAAEiB,WAAW,GAAIJ,UAAU,CAACR,QAAQ,CAAC,CAAEY,WAAW;EACrEpB,KAAK,CAACQ,QAAQ,CAAC,CAAEW,KAAK,GAAIP,QAAQ,CAACT,YAAY,CAAC,CAAEgB,KAAK;EACvDnB,KAAK,CAACQ,QAAQ,CAAC,CAAEY,WAAW,GAAIR,QAAQ,CAACT,YAAY,CAAC,CAAEiB,WAAW;EAEpE,OAAOpB,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}