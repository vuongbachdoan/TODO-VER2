{"ast":null,"code":"var _jsxFileName = \"C:\\\\DEV\\\\React\\\\todo-ver2\\\\todo-client\\\\src\\\\pages\\\\App\\\\components\\\\sidebar\\\\Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentWorkspace, toogleAddingWorkspace, updateWorkspaces } from '../../../../redux/reducers/appReducer';\nimport { CtMenu } from '../../../../shared/components/Menu/Menu';\nimport { CtTreeView } from '../../../../shared/components/TreeView/TreeView';\nimport { ReactComponent as TodayIcon } from '../../../../assets/images/icon-today.svg';\nimport './Sidebar.scss';\nimport { useEffect, useState } from 'react';\nimport { WorkspaceService } from '../../../../shared/services/workspaceService';\nimport { TaskService } from '../../../../shared/services/taskService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  description: 'Today',\n  prefixIcon: /*#__PURE__*/_jsxDEV(TodayIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 21\n  }, this)\n}];\nexport const Sidebar = () => {\n  _s();\n  const workspaces = useSelector(state => state.appData.workspaces);\n  const currentWorkspace = useSelector(state => state.appData.currentWorkspace);\n  const dispatch = useDispatch();\n  const handleAddingWorkspace = () => {\n    dispatch(toogleAddingWorkspace(true));\n  };\n  const [activeColor, setActiveColor] = useState(\"\");\n  const handleClick = item => {\n    dispatch(setCurrentWorkspace(item._id));\n  };\n  const deleteWorkspace = workspaceId => {\n    WorkspaceService.deleteWorkspace(workspaceId).then(() => {\n      WorkspaceService.getWorkspaces().then(res => {\n        dispatch(updateWorkspaces(res.data));\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(CtMenu, {\n      data: data,\n      onClick: val => handleClick(val)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-treeview\",\n      children: /*#__PURE__*/_jsxDEV(CtTreeView, {\n        data: {\n          function: () => handleAddingWorkspace(),\n          children: workspaces,\n          color: {\n            activeColor\n          }\n        },\n        onClick: val => handleClick(val),\n        onDelete: val => deleteWorkspace(val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Sidebar, \"OQLRaS5dKDrxEDb9BiFzuaaVCCM=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useDispatch","useSelector","setCurrentWorkspace","toogleAddingWorkspace","updateWorkspaces","CtMenu","CtTreeView","ReactComponent","TodayIcon","useEffect","useState","WorkspaceService","TaskService","data","description","prefixIcon","Sidebar","workspaces","state","appData","currentWorkspace","dispatch","handleAddingWorkspace","activeColor","setActiveColor","handleClick","item","_id","deleteWorkspace","workspaceId","then","getWorkspaces","res","val","function","children","color"],"sources":["C:/DEV/React/todo-ver2/todo-client/src/pages/App/components/sidebar/Sidebar.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\nimport { setCurrentWorkspace, toogleAddingWorkspace, updateWorkspaces } from '../../../../redux/reducers/appReducer';\r\nimport { CtMenu } from '../../../../shared/components/Menu/Menu';\r\nimport { CtTreeView } from '../../../../shared/components/TreeView/TreeView';\r\nimport { ReactComponent as TodayIcon } from '../../../../assets/images/icon-today.svg';\r\n\r\nimport './Sidebar.scss';\r\nimport { useEffect, useState } from 'react';\r\nimport { WorkspaceService } from '../../../../shared/services/workspaceService';\r\nimport { TaskService } from '../../../../shared/services/taskService';\r\n\r\nconst data = [\r\n    {\r\n        description: 'Today',\r\n        prefixIcon: <TodayIcon />\r\n    }\r\n]\r\n\r\nexport const Sidebar = () => {\r\n    const workspaces = useSelector((state) => state.appData.workspaces);\r\n    const currentWorkspace = useSelector((state) => state.appData.currentWorkspace);\r\n    const dispatch = useDispatch()\r\n    const handleAddingWorkspace = () => {\r\n        dispatch(toogleAddingWorkspace(true));\r\n    }\r\n\r\n    const [activeColor, setActiveColor] = useState(\"\");\r\n    const handleClick = (item) => {\r\n        dispatch(setCurrentWorkspace(item._id));\r\n    }\r\n\r\n    const deleteWorkspace = (workspaceId) => {\r\n        WorkspaceService.deleteWorkspace(workspaceId).then(\r\n            () => {\r\n                WorkspaceService.getWorkspaces()\r\n                    .then(\r\n                        (res) => {\r\n                            dispatch(updateWorkspaces(res.data))\r\n                        }\r\n                    )\r\n            }\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"app-sidebar\">\r\n            <CtMenu data={data} onClick={(val) => handleClick(val)} />\r\n            <div className=\"wrap-treeview\">\r\n                <CtTreeView\r\n                    data={{\r\n                        function: () => handleAddingWorkspace(),\r\n                        children: workspaces,\r\n                        color: { activeColor }\r\n                    }}\r\n                    onClick={(val) => handleClick(val)}\r\n                    onDelete={(val) => deleteWorkspace(val)}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,EAAEC,qBAAqB,EAAEC,gBAAgB,QAAQ,uCAAuC;AACpH,SAASC,MAAM,QAAQ,yCAAyC;AAChE,SAASC,UAAU,QAAQ,iDAAiD;AAC5E,SAASC,cAAc,IAAIC,SAAS,QAAQ,0CAA0C;AAEtF,OAAO,gBAAgB;AACvB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,WAAW,QAAQ,yCAAyC;AAAC;AAEtE,MAAMC,IAAI,GAAG,CACT;EACIC,WAAW,EAAE,OAAO;EACpBC,UAAU,eAAE,QAAC,SAAS;IAAA;IAAA;IAAA;EAAA;AAC1B,CAAC,CACJ;AAED,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EACzB,MAAMC,UAAU,GAAGhB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,UAAU,CAAC;EACnE,MAAMG,gBAAgB,GAAGnB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACC,gBAAgB,CAAC;EAC/E,MAAMC,QAAQ,GAAGrB,WAAW,EAAE;EAC9B,MAAMsB,qBAAqB,GAAG,MAAM;IAChCD,QAAQ,CAAClB,qBAAqB,CAAC,IAAI,CAAC,CAAC;EACzC,CAAC;EAED,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMe,WAAW,GAAIC,IAAI,IAAK;IAC1BL,QAAQ,CAACnB,mBAAmB,CAACwB,IAAI,CAACC,GAAG,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMC,eAAe,GAAIC,WAAW,IAAK;IACrClB,gBAAgB,CAACiB,eAAe,CAACC,WAAW,CAAC,CAACC,IAAI,CAC9C,MAAM;MACFnB,gBAAgB,CAACoB,aAAa,EAAE,CAC3BD,IAAI,CACAE,GAAG,IAAK;QACLX,QAAQ,CAACjB,gBAAgB,CAAC4B,GAAG,CAACnB,IAAI,CAAC,CAAC;MACxC,CAAC,CACJ;IACT,CAAC,CACJ;EACL,CAAC;EACD,oBACI;IAAK,SAAS,EAAC,aAAa;IAAA,wBACxB,QAAC,MAAM;MAAC,IAAI,EAAEA,IAAK;MAAC,OAAO,EAAGoB,GAAG,IAAKR,WAAW,CAACQ,GAAG;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1D;MAAK,SAAS,EAAC,eAAe;MAAA,uBAC1B,QAAC,UAAU;QACP,IAAI,EAAE;UACFC,QAAQ,EAAE,MAAMZ,qBAAqB,EAAE;UACvCa,QAAQ,EAAElB,UAAU;UACpBmB,KAAK,EAAE;YAAEb;UAAY;QACzB,CAAE;QACF,OAAO,EAAGU,GAAG,IAAKR,WAAW,CAACQ,GAAG,CAAE;QACnC,QAAQ,EAAGA,GAAG,IAAKL,eAAe,CAACK,GAAG;MAAE;QAAA;QAAA;QAAA;MAAA;IAC1C;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GAzCYjB,OAAO;EAAA,QACGf,WAAW,EACLA,WAAW,EACnBD,WAAW;AAAA;AAAA,KAHnBgB,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}