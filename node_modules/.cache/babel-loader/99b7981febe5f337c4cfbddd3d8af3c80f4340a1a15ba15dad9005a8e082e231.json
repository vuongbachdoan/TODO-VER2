{"ast":null,"code":"var _jsxFileName = \"C:\\\\DEV\\\\React\\\\todo-ver2\\\\todo-client\\\\src\\\\pages\\\\SignUp\\\\SignUp.jsx\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { CtButton } from \"../../shared/components/Button/Button\";\nimport { CtInput, CtPassword } from \"../../shared/components/Input/Input\";\nimport { useState } from \"react\";\nimport { UserService } from \"../../shared/services/userService\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignUp = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, getEmailValue] = useState('');\n  const handleEmailValue = val => {\n    getEmailValue(val);\n  };\n  const [password, getPasswordValue] = useState('');\n  const handlePasswordValue = val => {\n    getPasswordValue(val);\n  };\n  const [isPasswordValid, setIsPasswordValid] = useState(true);\n  const [passwordConfirmed, getConfirmPasswordValue] = useState('');\n  const handleConfirmPasswordValue = val => {\n    getConfirmPasswordValue(val);\n  };\n  useEffect(() => {\n    if (password.length >= 8 && passwordConfirmed.length >= 8 && passwordConfirmed === password) {\n      setIsPasswordValid(true);\n    } else {\n      setIsPasswordValid(false);\n    }\n  }, [passwordConfirmed]);\n  const createUser = () => {\n    if (isPasswordValid) {\n      const user = {\n        email: email,\n        password: password,\n        createAt: new Date().toISOString\n      };\n      UserService.create(user).th;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ct__desctiption\",\n          children: \"Work better with todoist.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CtInput, {\n          data: {\n            label: \"Email\",\n            required: true,\n            getInput: val => handleEmailValue(val)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CtPassword, {\n          data: {\n            label: \"Password\",\n            required: true,\n            getInput: val => handlePasswordValue(val)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CtPassword, {\n          data: {\n            label: \"Confirm password\",\n            required: true,\n            getInput: val => handleConfirmPasswordValue(val),\n            description: isPasswordValid ? \"\" : \"Invalid password\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CtButton, {\n          data: {\n            description: \"Sign Up\",\n            btnType: \"ct__btn-success\",\n            class: \"ct__my-1\"\n          },\n          onClick: createUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ct__desctiption\",\n          children: [\"Have an account, \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 42\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUp, \"cUqWNDazHpxEf+apYileM+oN2zM=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["Link","useNavigate","CtButton","CtInput","CtPassword","useState","UserService","useEffect","SignUp","navigate","email","getEmailValue","handleEmailValue","val","password","getPasswordValue","handlePasswordValue","isPasswordValid","setIsPasswordValid","passwordConfirmed","getConfirmPasswordValue","handleConfirmPasswordValue","length","createUser","user","createAt","Date","toISOString","create","th","label","required","getInput","description","btnType","class"],"sources":["C:/DEV/React/todo-ver2/todo-client/src/pages/SignUp/SignUp.jsx"],"sourcesContent":["import { Link, useNavigate } from \"react-router-dom\";\r\nimport { CtButton } from \"../../shared/components/Button/Button\";\r\nimport { CtInput, CtPassword } from \"../../shared/components/Input/Input\";\r\nimport { useState } from \"react\";\r\nimport { UserService } from \"../../shared/services/userService\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const SignUp = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [email, getEmailValue] = useState('');\r\n    const handleEmailValue = (val) => {\r\n        getEmailValue(val);\r\n    }\r\n\r\n    const [password, getPasswordValue] = useState('');\r\n    const handlePasswordValue = (val) => {\r\n        getPasswordValue(val);\r\n    }\r\n\r\n    const [isPasswordValid, setIsPasswordValid] = useState(true);\r\n    const [passwordConfirmed, getConfirmPasswordValue] = useState('');\r\n    const handleConfirmPasswordValue = (val) => {\r\n        getConfirmPasswordValue(val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(password.length >= 8 && passwordConfirmed.length >=8 && passwordConfirmed === password) {\r\n            setIsPasswordValid(true);\r\n        } else {\r\n            setIsPasswordValid(false);\r\n        }\r\n    }, [passwordConfirmed])\r\n\r\n    const createUser = () => {\r\n        if(isPasswordValid) {\r\n            const user = {\r\n                email: email,\r\n                password: password,\r\n                createAt: new Date().toISOString,\r\n            }\r\n            UserService.create(user)\r\n                .th;\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__row\">\r\n                <div className=\"login__left\">\r\n                    <h3>Create your account</h3>\r\n                    <p className=\"ct__desctiption\">Work better with todoist.</p>\r\n                    <CtInput data={{ label: \"Email\", required: true, getInput: (val) => handleEmailValue(val) }} />\r\n                    <CtPassword data={{ label: \"Password\", required: true, getInput: (val) => handlePasswordValue(val) }} />\r\n                    <CtPassword data={{ label: \"Confirm password\", required: true, getInput: (val) => handleConfirmPasswordValue(val), description: isPasswordValid ? \"\" : \"Invalid password\" }} />\r\n                    {/* <Link to={\"/app\"}><CtButton data={{ description: \"Sign Up\", btnType: \"ct__btn-success\", class: \"ct__my-1\" }} onClick={createUser} /></Link> */}\r\n                    <CtButton data={{ description: \"Sign Up\", btnType: \"ct__btn-success\", class: \"ct__my-1\" }} onClick={createUser} />\r\n\r\n                    <p className=\"ct__desctiption\">\r\n                        Have an account, <Link to={\"/\"}>login</Link>.\r\n                    </p>\r\n                </div>\r\n                <div className=\"login__right\">\r\n                    <div className=\"bg-content\">\r\n                        {/* <h3 className=\"ct__text-white\">Interactive Login</h3>\r\n                        <div className=\"bg-action_btns row\">\r\n                            <ArrowIcon className=\"bg-action_btn\" style={{transform: \"rotateZ(90deg)\"}}/>\r\n                            <ArrowIcon className=\"bg-action_btn\" style={{transform: \"rotateZ(-90deg)\"}}/>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}