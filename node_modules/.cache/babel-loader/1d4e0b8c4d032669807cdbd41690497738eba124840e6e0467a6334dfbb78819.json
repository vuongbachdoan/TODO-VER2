{"ast":null,"code":"var _jsxFileName = \"C:\\\\DEV\\\\React\\\\todo-ver2\\\\todo-client\\\\src\\\\pages\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { CtButton } from \"../../shared/components/Button/Button\";\nimport { CtInput, CtPassword } from \"../../shared/components/Input/Input\";\nimport \"./Login.scss\";\nimport { useEffect, useState } from \"react\";\nimport { validateEmail } from \"../../shared/utils/validateEmail\";\nimport { AuthService } from \"../../shared/services/authService\";\nimport { useDispatch } from \"react-redux\";\nimport { setToken } from \"../../redux/reducers/appReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [email, getEmailValue] = useState('');\n  const handleEmailValue = val => {\n    getEmailValue(val);\n  };\n  const [isEmailValid, setIsEmailValid] = useState(true);\n  useEffect(() => {\n    setIsEmailValid(validateEmail(email));\n  }, [email]);\n  const [password, getPasswordValue] = useState('');\n  const handlePasswordValue = val => {\n    getPasswordValue(val);\n  };\n  const [isPasswordValid, setIsPasswordValid] = useState(true);\n  useEffect(() => {\n    if (password.length >= 8) {\n      setIsPasswordValid(true);\n    } else {\n      setIsPasswordValid(false);\n    }\n  }, [password]);\n  const handleLogin = () => {\n    if (isPasswordValid) {\n      const user = {\n        email: email,\n        password: password\n      };\n      AuthService.logIn(user).then(res => {\n        dispatch(setToken({\n          accessToken\n        }));\n        console.log(res.data);\n        navigate('/app');\n      }).catch(err => console.log(err));\n    } else {\n      console.warn(\"Can't create user!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Login with your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ct__desctiption\",\n          children: \"Work better with todoist.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CtInput, {\n          data: {\n            label: \"Email\",\n            required: true,\n            getInput: val => handleEmailValue(val),\n            description: isEmailValid ? \"\" : \"Email is invalid\",\n            placeholder: \"abc@domain.com\",\n            noSpace: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CtPassword, {\n          data: {\n            label: \"Password\",\n            required: true,\n            getInput: val => handlePasswordValue(val),\n            noSpace: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CtButton, {\n          data: {\n            description: \"Login\",\n            btnType: \"ct__btn-success\",\n            class: \"ct__my-1\"\n          },\n          onClick: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ct__desctiption\",\n          children: [\"Don't have an account, \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/sign-up\",\n            children: \"create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 48\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"QXYHkZ6s1tAE7W7h54xMXodgObk=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Link","useNavigate","CtButton","CtInput","CtPassword","useEffect","useState","validateEmail","AuthService","useDispatch","setToken","Login","dispatch","navigate","email","getEmailValue","handleEmailValue","val","isEmailValid","setIsEmailValid","password","getPasswordValue","handlePasswordValue","isPasswordValid","setIsPasswordValid","length","handleLogin","user","logIn","then","res","accessToken","console","log","data","catch","err","warn","label","required","getInput","description","placeholder","noSpace","btnType","class"],"sources":["C:/DEV/React/todo-ver2/todo-client/src/pages/Login/Login.jsx"],"sourcesContent":["import { Link, useNavigate } from \"react-router-dom\";\r\nimport { CtButton } from \"../../shared/components/Button/Button\";\r\nimport { CtInput, CtPassword } from \"../../shared/components/Input/Input\";\r\n\r\nimport \"./Login.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { validateEmail } from \"../../shared/utils/validateEmail\";\r\nimport { AuthService } from \"../../shared/services/authService\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setToken } from \"../../redux/reducers/appReducer\";\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const [email, getEmailValue] = useState('');\r\n    const handleEmailValue = (val) => {\r\n        getEmailValue(val);\r\n    }\r\n\r\n    const [isEmailValid, setIsEmailValid] = useState(true);\r\n    useEffect(() => {\r\n        setIsEmailValid(validateEmail(email));\r\n    }, [email])\r\n\r\n    const [password, getPasswordValue] = useState('');\r\n    const handlePasswordValue = (val) => {\r\n        getPasswordValue(val);\r\n    }\r\n\r\n    const [isPasswordValid, setIsPasswordValid] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (password.length >= 8) {\r\n            setIsPasswordValid(true);\r\n        } else {\r\n            setIsPasswordValid(false);\r\n        }\r\n    }, [password])\r\n\r\n    const handleLogin = () => {\r\n        if (isPasswordValid) {\r\n            const user = {\r\n                email: email,\r\n                password: password,\r\n            }\r\n\r\n            AuthService.logIn(user)\r\n                .then((res) => {\r\n                    dispatch(setToken({\r\n                        accessToken\r\n                    }))\r\n                    console.log(res.data);\r\n                    navigate('/app');\r\n                })\r\n                .catch((err) => console.log(err));\r\n        } else {\r\n            console.warn(\"Can't create user!\")\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__row\">\r\n                <div className=\"login__left\">\r\n                    <h3>Login with your account</h3>\r\n                    <p className=\"ct__desctiption\">Work better with todoist.</p>\r\n                    <CtInput\r\n                        data={{\r\n                            label: \"Email\",\r\n                            required: true,\r\n                            getInput: (val) => handleEmailValue(val),\r\n                            description: isEmailValid ? \"\" : \"Email is invalid\",\r\n                            placeholder: \"abc@domain.com\",\r\n                            noSpace: true\r\n                        }}\r\n                    />\r\n                    <CtPassword\r\n                        data={{\r\n                            label: \"Password\",\r\n                            required: true,\r\n                            getInput: (val) => handlePasswordValue(val),\r\n                            noSpace: true\r\n                        }}\r\n                    />\r\n                    <CtButton\r\n                        data={{\r\n                            description: \"Login\",\r\n                            btnType: \"ct__btn-success\",\r\n                            class: \"ct__my-1\"\r\n                        }}\r\n                        onClick={handleLogin}\r\n                    />\r\n\r\n                    <p className=\"ct__desctiption\">\r\n                        Don't have an account, <Link to={\"/sign-up\"}>create</Link>.\r\n                    </p>\r\n                </div>\r\n                <div className=\"login__right\">\r\n                    <div className=\"bg-content\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}