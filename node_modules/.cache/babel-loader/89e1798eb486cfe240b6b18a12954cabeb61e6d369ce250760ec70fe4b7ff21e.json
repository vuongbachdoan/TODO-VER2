{"ast":null,"code":"export function changDragPosition(items, yPos, newYPos, currentOrder, heightOfElement) {\n  let spaceBetweenRow = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  let list = [...items];\n  let variance = newYPos - yPos;\n  let axist = 1; // -1 is to top, 1 is to bottom\n  let newOrder = currentOrder;\n  if (variance < 0) {\n    axist = -1;\n  }\n  variance = Math.abs(variance);\n  if (axist + currentOrder < 0 || axist + currentOrder > list.length) return list; // index out of range\n\n  while (variance > heightOfElement && !(newOrder + axist < 0) && !(newOrder + axist > list.length)) {\n    newOrder += axist;\n    variance -= heightOfElement + spaceBetweenRow;\n  }\n  const element = list.splice(currentOrder, 1)[0];\n  list.splice(newOrder, 0, element);\n  const result = list.map((element, index) => ({\n    title: element.title,\n    description: element.description,\n    order: index\n  }));\n  console.log(result);\n  return result;\n}","map":{"version":3,"names":["changDragPosition","items","yPos","newYPos","currentOrder","heightOfElement","spaceBetweenRow","list","variance","axist","newOrder","Math","abs","length","element","splice","result","map","index","title","description","order","console","log"],"sources":["C:/DEV/React/todo-ver2/todo-client/src/shared/utils/changeDragPosition.js"],"sourcesContent":["export function  changDragPosition (items, yPos, newYPos, currentOrder, heightOfElement, spaceBetweenRow = 0){\r\n    let list = [...items];\r\n    \r\n    let variance = newYPos - yPos;\r\n    let axist = 1; // -1 is to top, 1 is to bottom\r\n    let newOrder = currentOrder;\r\n    if(variance < 0) {\r\n        axist = -1;\r\n    }\r\n    variance = Math.abs(variance);\r\n\r\n    if(axist + currentOrder < 0 || axist + currentOrder > list.length) return list; // index out of range\r\n\r\n    while(variance > heightOfElement && !(newOrder + axist < 0) && !(newOrder + axist > list.length)) {\r\n        newOrder += axist;\r\n        variance -= (heightOfElement + spaceBetweenRow);\r\n    }\r\n    \r\n    const element = list.splice(currentOrder, 1)[0];\r\n    list.splice(newOrder, 0, element);\r\n\r\n    const result = list.map((element, index) => ({\r\n        title: element.title,\r\n        description: element.description,\r\n        order: index\r\n    }))\r\n\r\n    console.log(result)\r\n\r\n    return result;\r\n}"],"mappings":"AAAA,OAAO,SAAUA,iBAAiB,CAAEC,KAAK,EAAEC,IAAI,EAAEC,OAAO,EAAEC,YAAY,EAAEC,eAAe,EAAsB;EAAA,IAApBC,eAAe,uEAAG,CAAC;EACxG,IAAIC,IAAI,GAAG,CAAC,GAAGN,KAAK,CAAC;EAErB,IAAIO,QAAQ,GAAGL,OAAO,GAAGD,IAAI;EAC7B,IAAIO,KAAK,GAAG,CAAC,CAAC,CAAC;EACf,IAAIC,QAAQ,GAAGN,YAAY;EAC3B,IAAGI,QAAQ,GAAG,CAAC,EAAE;IACbC,KAAK,GAAG,CAAC,CAAC;EACd;EACAD,QAAQ,GAAGG,IAAI,CAACC,GAAG,CAACJ,QAAQ,CAAC;EAE7B,IAAGC,KAAK,GAAGL,YAAY,GAAG,CAAC,IAAIK,KAAK,GAAGL,YAAY,GAAGG,IAAI,CAACM,MAAM,EAAE,OAAON,IAAI,CAAC,CAAC;;EAEhF,OAAMC,QAAQ,GAAGH,eAAe,IAAI,EAAEK,QAAQ,GAAGD,KAAK,GAAG,CAAC,CAAC,IAAI,EAAEC,QAAQ,GAAGD,KAAK,GAAGF,IAAI,CAACM,MAAM,CAAC,EAAE;IAC9FH,QAAQ,IAAID,KAAK;IACjBD,QAAQ,IAAKH,eAAe,GAAGC,eAAgB;EACnD;EAEA,MAAMQ,OAAO,GAAGP,IAAI,CAACQ,MAAM,CAACX,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/CG,IAAI,CAACQ,MAAM,CAACL,QAAQ,EAAE,CAAC,EAAEI,OAAO,CAAC;EAEjC,MAAME,MAAM,GAAGT,IAAI,CAACU,GAAG,CAAC,CAACH,OAAO,EAAEI,KAAK,MAAM;IACzCC,KAAK,EAAEL,OAAO,CAACK,KAAK;IACpBC,WAAW,EAAEN,OAAO,CAACM,WAAW;IAChCC,KAAK,EAAEH;EACX,CAAC,CAAC,CAAC;EAEHI,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;EAEnB,OAAOA,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}